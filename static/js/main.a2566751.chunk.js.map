{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Section/Section.jsx","services/contactsApi.js","redux/contacts/contactsOperations.jsx","redux/contacts/contactsSelectors.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.jsx","redux/contacts/contactsSlice.jsx","components/Filter/Filter.jsx","App.js","redux/store.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","fetchContacts","a","axios","get","data","addContact","contact","post","dltContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","addContacts","items","deleteContacts","getContacts","state","phoneBook","getIsLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","name","includes","number","FormHooks","useState","setName","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","nameInputId","shortid","generate","numInputId","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","nameInlist","find","numberInList","toast","error","contactsOperations","success","htmlFor","formInput","placeholder","type","pattern","required","onChange","formBtn","ContactsList","contactList","map","contactItem","contactDescription","deleteBtn","onClick","contactsSlice","createSlice","initialState","reducers","changeFilter","action","payload","extraReducers","fulfilled","pending","rejected","console","log","push","actions","Filter","label","filterInput","target","App","useEffect","Form","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.a2566751.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\",\"contactDescription\":\"ContactsList_contactDescription__3l3Kl\",\"deleteBtn\":\"ContactsList_deleteBtn__9HgYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Form_formInput__7h6Ga\",\"formBtn\":\"Form_formBtn__6_XDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>\n        {title === 'Phonebook' }\n        {title}\n      </h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n\n  return data;\n}\n\nexport async function dltContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport * as contactsApi from '../../services/contactsApi';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const items = await contactsApi.addContact(contact);\n      return items;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await contactsApi.dltContact(id);\n\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);","import { createSelector } from '@reduxjs/toolkit';\n\n\nexport const getContacts = state => state.phoneBook.contacts;\n\nexport const getIsLoading = state => state.phoneBook.isLoading;\n\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContacts = filter.toLowerCase();\n   \n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedContacts) ||\n        contact.number.includes(filter),\n    );\n  },\n);","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport s from './Form.module.css';\n\nconst FormHooks = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameInlist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const numberInList = contacts.find(contact => contact.number === number);\n    if (nameInlist) {\n      toast.error(`'${name}' is already in your list`);\n      reset();\n      return;\n    }\n    if (numberInList) {\n      toast.error(`'${number}' is already in your list`);\n      reset();\n      return;\n    }\n    dispatch(contactsOperations.addContacts({ name, number }));\n    toast.success(`'${name}' added to phonebook`);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Name\"\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, an apostrophe, a dash and spaces.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor={numInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Tel\"\n            id={numInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"The phone number must consist of digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormHooks;","import s from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\n\n\nconst ContactsList = () => {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactDescription}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.deleteBtn}\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;","import {\n  addContacts,\n  deleteContacts,\n  fetchContacts,\n} from './contactsOperations';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst contactsSlice = createSlice({\n  name: 'phoneBook',\n  initialState: {\n    contacts: [],\n    isLoading: false,\n    filter: '',\n    error: null,\n  },\n  reducers: {\n    changeFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchContacts.fulfilled](state, action) {\n      state.contacts = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    [fetchContacts.pending](state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [fetchContacts.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action.payload);\n    },\n\n    [addContacts.fulfilled](state, action) {\n      state.contacts.push(action.payload);\n      state.isLoading = false;\n      state.error = null;\n    },\n    [addContacts.pending](state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [addContacts.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action.payload);\n    },\n\n    [deleteContacts.fulfilled](state, action) {\n      state.contacts = state.contacts.filter(\n        contact => contact.id !== action.payload,\n      );\n      state.isLoading = false;\n      state.error = null;\n    },\n    [deleteContacts.pending](state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [deleteContacts.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action.payload);\n    },\n  },\n});\nexport default contactsSlice.reducer;\nexport const { changeFilter } = contactsSlice.actions;","import { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { contactsSelectors } from '../../redux/contacts';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      <input\n        className={s.filterInput}\n        placeholder=\"Find contacts\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;","import React from \"react\";\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Form/Form\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsSelectors, contactsOperations } from \"../src/redux/contacts\";\nimport { useEffect } from \"react\";\n\nexport default function App() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Container>\n        <Section title=\"Phonebook\">\n          <Form />\n        </Section>\n        {contacts.length > 0 && (\n          <Section title=\"Contacts\">\n            <Filter />\n            <ContactsList />\n          </Section>\n        )}\n      </Container>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactsSlice from './contacts/contactsSlice';\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: contactsSlice,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}